var e = require("../js/evaluate.js");
var S = require("../js/score.js");
var assert = require('assert');

var b

describe('test evalute', function() {
  it(`test one`, function() {
    b = [
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 2, 0, 0],
      [0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0],
    ];
    assert.equal(e(b, 2), 4*S.ONE);

    b = [
      [0, 0, 0],
      [0, 1, 0],
      [0, 0, 0],
    ];
    assert.equal(e(b, 1), 4*S.ONE * -1);

    b = [
      [0, 2, 0],
      [0, 1, 0],
      [0, 0, 0],
    ];
    assert.equal(e(b, 1), (S.ONE + 2*S.BLOCKED_ONE) - (3*S.ONE + S.BLOCKED_ONE));
  });

  it(`test two`, function() {
    b = [
      [0, 0, 2, 2, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
    ];
    assert.equal(e(b), S.TWO);

    b = [
      [0, 0, 0, 0, 0, 0],
      [0, 0, 2, 2, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
    ];
    assert.equal(e(b), S.TWO);
  });

  it(`test three`, function() {
    b = [
      [0, 2, 2, 2, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
    ];
    assert.equal(e(b), S.THREE);

    b = [
      [0, 0, 0, 0, 0, 0],
      [0, 2, 2, 2, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
    ];
    assert.equal(e(b), S.THREE);

    b = [
      [0, 0, 0, 0, 0, 0],
      [0, 2, 0, 2, 2, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
    ];
    assert.equal(e(b), S.THREE);


    b = [
      [0, 0, 0, 0, 0, 0],
      [0, 2, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 2, 0, 0],
      [0, 0, 0, 0, 2, 0],
      [0, 0, 0, 0, 0, 0],
    ];
    assert.equal(e(b), S.THREE);
  });


  it(`test four `, function() {
    b = [
      [0, 2, 2, 2, 2, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
    ];
    assert.equal(e(b), S.FOUR);

    b = [
      [0, 0, 0, 0, 0, 0],
      [0, 2, 2, 2, 2, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
    ];
    assert.equal(e(b), S.FOUR);
  });



  it(`test five`, function() {
    b = [
      [0, 2, 2, 2, 2, 2],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0],
    ];
    assert.equal(e(b), S.FIVE);

    b = [
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 2, 2, 2, 2, 2, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0]
    ];
    assert.equal(e(b), S.FIVE);

  });

  it(`test 冲四活三`, function() {
    b = [
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 2, 2, 2, 1, 0],
      [0, 0, 0, 0, 2, 1, 0, 0, 0],
      [0, 0, 0, 0, 0, 2, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0]
    ];
    assert.equal(e(b, 2), S.FIVE);

  });
});
